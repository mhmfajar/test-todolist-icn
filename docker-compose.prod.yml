services:
  database:
    image: postgres:alpine
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: icn_todos
    volumes:
      - database-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB -h 127.0.0.1"]
      interval: 5s
      timeout: 3s
      retries: 20
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: "0.30"
          memory: 300M
        reservations:
          memory: 200M
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.prod
    env_file:
      - ./backend/.env.production
    ports:
      - "127.0.0.1:3001:3001"
    depends_on:
      database:
        condition: service_healthy
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:3001/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: "0.35"
          memory: 300M
        reservations:
          memory: 150M
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.prod
    env_file:
      - ./frontend/.env.production
    ports:
      - "127.0.0.1:3000:3000"
    depends_on:
      backend:
        condition: service_started
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://127.0.0.1:3000/ || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 10
      start_period: 5s
    deploy:
      resources:
        limits:
          cpus: "0.35"
          memory: 300M
        reservations:
          memory: 150M
    restart: unless-stopped

volumes:
  database-data:
